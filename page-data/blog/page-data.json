{"componentChunkName":"component---node-modules-gatsby-theme-portfolio-minimal-src-templates-article-listing-index-tsx","path":"/blog/","result":{"pageContext":{"articles":[{"banner":{"alt":"FluentBit Post","caption":"Photo by <u><a href=\"https://unsplash.com/photos/oQD9uq4Rd4I\">MichaÅ‚ Jakubowski</a></u>","src":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#4898b8","images":{"fallback":{"src":"/static/355967cea4704166703b831eff82c587/91671/michal-jakubowski-oQD9uq4Rd4I-unsplash.jpg","srcSet":"/static/355967cea4704166703b831eff82c587/7e3b4/michal-jakubowski-oQD9uq4Rd4I-unsplash.jpg 165w,\n/static/355967cea4704166703b831eff82c587/47f88/michal-jakubowski-oQD9uq4Rd4I-unsplash.jpg 330w,\n/static/355967cea4704166703b831eff82c587/91671/michal-jakubowski-oQD9uq4Rd4I-unsplash.jpg 660w,\n/static/355967cea4704166703b831eff82c587/5aaff/michal-jakubowski-oQD9uq4Rd4I-unsplash.jpg 1320w","sizes":"(min-width: 660px) 660px, 100vw"},"sources":[{"srcSet":"/static/355967cea4704166703b831eff82c587/322ad/michal-jakubowski-oQD9uq4Rd4I-unsplash.webp 165w,\n/static/355967cea4704166703b831eff82c587/de3b3/michal-jakubowski-oQD9uq4Rd4I-unsplash.webp 330w,\n/static/355967cea4704166703b831eff82c587/2b2b5/michal-jakubowski-oQD9uq4Rd4I-unsplash.webp 660w,\n/static/355967cea4704166703b831eff82c587/e36a7/michal-jakubowski-oQD9uq4Rd4I-unsplash.webp 1320w","type":"image/webp","sizes":"(min-width: 660px) 660px, 100vw"}]},"width":660,"height":400}}}},"body":"<h1>ðŸš§To be Written!ðŸš§</h1>\n<!-- ## Code block test\r\n\r\n```css\r\n.AClass .Subtitle {\r\n  margin: -0.5rem 0 0 0;\r\n  font-weight: 700;\r\n  font-size: 1.25rem;\r\n  line-height: 1.5rem;\r\n}\r\n\r\n.AnotherClass p {\r\n  font-size: 1.125rem;\r\n  margin-bottom: 2rem;\r\n}\r\n\r\n.AThirdClass {\r\n  display: flex;\r\n  justify-content: flex-start;\r\n  align-items: center;\r\n}\r\n\r\n@media (max-width: 768px) {\r\n  .AClass {\r\n    flex-direction: column;\r\n  }\r\n  .AnotherClass {\r\n    display: block;\r\n  }\r\n}\r\n```\r\n\r\nInline code: `print()`\r\n\r\nLorem ipsum dolor sit amed Vel ut spiritday all cultural Lili Elbe lorem in sexuality Herstory sit lorem Ac Genderless homoflexible trans Carrie Fisher Transgender love family cross-dresser ac a ut Ac xe she ut Tina Anselmi woman Marina Abramovich Lesbians and Gays Support the Miners Ipsum Chimamanda Ngozi sed sit Equal movement gender ut est lorem Laura Jane Grace Emma Watson sem eu.\r\n\r\n**Maria Montessori vel sem in eu Leelah Alcorn** In eu Leelah Alcorn in Margaret Sanger future Martha Nussbaum eu gender non-conformity Family cross-dresser ac a ut representation drag queen Ac third wave Hannah Gadsby culture feminismus ac suffragette cisgender in a eu Ac a ut representation drag queen Out Lorem ac no means no f word sed Emmeline Pankhurst.\r\n\r\n## Second Headline\r\n\r\nEst vel est appreciation Nadia Murad Basee Taha cross-dressing vel Ut mi sit ut eu id Samira Wiley sit vel sem Ut romance in gender studies ballroom Sit lorem ac no means no f word sed Emmeline Pankhurst Ac sorellanza In Lea Delaria in grrlpwr pansexual intersectional yas queen diritti id mi Sem Audre Lorde Sappho in sed et empowerment genderqueer intersex.\r\n\r\n![This is the alt tag.](../../images/kelly-sikkema-Hl3LUdyKRic-unsplash.jpg \"This is a markdown [caption](https://konstantin.digital).\")\r\n\r\nFeminizmas eu Dian Fossey ac third wave notion supporting androgyny dui ut People a Sylvia Plath mi sex-positivity demisexual a equality suffragettes pronouns Vel est appreciation Nadia Murad Basee Taha cross-dressing vel Sustainability ut sit dui Lesbians and Gays Support the Miners local eu Hanna Gaby Odiele est queer Misty Copeland She ut Tina Anselmi woman Marina Abramovich Lesbians and Gays Support the Miners local Equal ac et ut romance in Second wave sit friendship grl pwr castro.\r\n\r\n### Third Headline\r\n\r\nVel sem Sed Roxane Gay Caitlin Moran Ace id Amelia Earhart Gloria Steinem Samira Wiley sit Amelia Earhart Gloria Steinem eu In et ac in Alexandria Ocasio-Cortez Emmy Noether a Bi-visibility Dance Simone de Beauvoir eu sem.\r\n\r\n#### Fourth Headline\r\n\r\nAlexandria Ocasio-Cortez Emmy Noether a Bi-visibility dui et voices Stonewall Inn sem et Ac pride month lorem et eu dui sit eu ut Eu ut Et in lorem id sed Id Kate Bornstein smash the patriarchy et et eu motivational ut In Chimamanda Ngozi sed sit strength.\r\n\r\n![This is the alt tag.](../../images/charles-deluvio-DgoyKNgPiFQ-unsplash.jpg)\r\n\r\nVel herstory Bossy sit ac xe she ut Tina Anselmi woman Marina Abramovich Spiritday all cultural Lili Elbe lorem in sexuality Transformation lgbt freedom et ac sem Sem we are everywhere Notion supporting androgyny dui ut dance Simone de Beauvoir eu sem sit Inge SchonÃ¶ethal Feltrinelli female gaze ac Franca viola. -->","categories":["Monitoring","Kubernetes","AKS"],"date":"March 12, 2023","description":"The Wonders of FluentBit","id":"bfc8e71b-7270-57f8-9445-6c15212d51fc","keywords":["Monitoring","FluentBit","Kubernetes","AKS","Blog"],"slug":"/FluentBit/","title":"The Wonders of FluentBit","readingTime":{"text":"3 min read"}},{"banner":{"alt":"IaC","caption":"Photo by <u><a href=\"https://unsplash.com/photos/j7q-Z9DV3zw\">Nathan Waters</a></u>","src":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#787878","images":{"fallback":{"src":"/static/8dc0d4e035c654e87d0fcf2e7f0047a0/91671/nathan-waters-j7q-Z9DV3zw-unsplash.jpg","srcSet":"/static/8dc0d4e035c654e87d0fcf2e7f0047a0/7e3b4/nathan-waters-j7q-Z9DV3zw-unsplash.jpg 165w,\n/static/8dc0d4e035c654e87d0fcf2e7f0047a0/47f88/nathan-waters-j7q-Z9DV3zw-unsplash.jpg 330w,\n/static/8dc0d4e035c654e87d0fcf2e7f0047a0/91671/nathan-waters-j7q-Z9DV3zw-unsplash.jpg 660w,\n/static/8dc0d4e035c654e87d0fcf2e7f0047a0/5aaff/nathan-waters-j7q-Z9DV3zw-unsplash.jpg 1320w","sizes":"(min-width: 660px) 660px, 100vw"},"sources":[{"srcSet":"/static/8dc0d4e035c654e87d0fcf2e7f0047a0/322ad/nathan-waters-j7q-Z9DV3zw-unsplash.webp 165w,\n/static/8dc0d4e035c654e87d0fcf2e7f0047a0/de3b3/nathan-waters-j7q-Z9DV3zw-unsplash.webp 330w,\n/static/8dc0d4e035c654e87d0fcf2e7f0047a0/2b2b5/nathan-waters-j7q-Z9DV3zw-unsplash.webp 660w,\n/static/8dc0d4e035c654e87d0fcf2e7f0047a0/e36a7/nathan-waters-j7q-Z9DV3zw-unsplash.webp 1320w","type":"image/webp","sizes":"(min-width: 660px) 660px, 100vw"}]},"width":660,"height":400}}}},"body":"<p>The following is a quick blog of my opinion on Terraform and Azure ARM. I am by far an expert on these tools, having only used Terraform on and off for 2 months and Azure ARM for less than a month. Both have its benefits which I will go on to explain and will reveal my preferred choice and why at the end. I have to also mention that I use Azure as my cloud provider so this will be written from that perspective. So lets begin and compare some points I feel are important for a good tool to use for Infrastructure as code (IaC)</p>\n<h2>Understanding</h2>\n<p>The way that Terraform is written allows for a wider audience to use of all skill levels. The simplicity of the documentation and examples given from it, allow for the user to easily apply Terraform to their own needs. For example the below code allows me to create a Windows Virtual Machine (VM), allocate it's network card, login information, the spec of the virtual machine, data disks and operating disks. It can also do more such as running certain scripts after the VM has been built</p>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\">            resource <span class=\"token string\">\"azurerm_virtual_machine\"</span> <span class=\"token string\">\"main\"</span> <span class=\"token punctuation\">{</span>\r\n              name                  = <span class=\"token string\">\"${var.prefix}-vm\"</span>\r\n              location              = <span class=\"token string\">\"${azurerm_resource_group.main.location}\"</span>\r\n              resource_group_name   = <span class=\"token string\">\"${azurerm_resource_group.main.name}\"</span>\r\n              network_interface_ids = <span class=\"token punctuation\">[</span><span class=\"token string\">\"${azurerm_network_interface.main.id}\"</span><span class=\"token punctuation\">]</span>\r\n              vm_size               = <span class=\"token string\">\"Standard_DS1_v2\"</span>\r\n            \r\n              storage_image_reference <span class=\"token punctuation\">{</span>\r\n                publisher = <span class=\"token string\">\"MicrosoftWindowsServer\"</span>\r\n                offer     = <span class=\"token string\">\"WindowsServer\"</span>\r\n                sku       = <span class=\"token string\">\"2016-Datacenter\"</span>\r\n                version   = <span class=\"token string\">\"latest\"</span>\r\n              <span class=\"token punctuation\">}</span>\r\n              storage_os_disk <span class=\"token punctuation\">{</span>\r\n                name              = <span class=\"token string\">\"myosdisk1\"</span>\r\n                caching           = <span class=\"token string\">\"ReadWrite\"</span>\r\n                create_option     = <span class=\"token string\">\"FromImage\"</span>\r\n                managed_disk_type = <span class=\"token string\">\"Standard_LRS\"</span>\r\n              <span class=\"token punctuation\">}</span>\r\n              os_profile <span class=\"token punctuation\">{</span>\r\n                computer_name  = <span class=\"token string\">\"hostname\"</span>\r\n                admin_username = <span class=\"token string\">\"testadmin\"</span>\r\n                admin_password = <span class=\"token string\">\"Password1234!\"</span>\r\n              <span class=\"token punctuation\">}</span>\r\n              os_profile_linux_config <span class=\"token punctuation\">{</span>\r\n                disable_password_authentication = <span class=\"token boolean\">false</span>\r\n              <span class=\"token punctuation\">}</span>\r\n              tags = <span class=\"token punctuation\">{</span>\r\n                environment = <span class=\"token string\">\"staging\"</span>\r\n              <span class=\"token punctuation\">}</span>\r\n            <span class=\"token punctuation\">}</span>\r\n          </code></pre></div>\n<p>As previously mentioned the documentation as for any technology is key to how well the user will understand how to use it. And for Terraform it is excellent (VM documentation here). Terraform uses it's own HCL language the interpolation syntax it utilises is very powerful, and lets you reference variables and attributes with ease. In addition, because it utilises this HCL language it also makes it more readable and user friendly in my opinion than Azure ARM. Azure ARM is written in JSON which, yes it could be argued is also readable but when you see it and try to utilise it for the first time it can be quite interesting to say the least. An example defining a virtual machine resource is below.</p>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\">    <span class=\"token punctuation\">{</span>\r\n                  <span class=\"token property\">\"type\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Microsoft.Compute/virtualMachines\"</span><span class=\"token punctuation\">,</span>\r\n                  <span class=\"token property\">\"apiVersion\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"2018-10-01\"</span><span class=\"token punctuation\">,</span>\r\n                  <span class=\"token property\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"[variables('vmName')]\"</span><span class=\"token punctuation\">,</span>\r\n                  <span class=\"token property\">\"location\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"[parameters('location')]\"</span><span class=\"token punctuation\">,</span>\r\n                  <span class=\"token property\">\"dependsOn\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\r\n                    <span class=\"token string\">\"[resourceId('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]\"</span><span class=\"token punctuation\">,</span>\r\n                    <span class=\"token string\">\"[resourceId('Microsoft.Network/networkInterfaces/', variables('nicName'))]\"</span>\r\n                  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\r\n                  <span class=\"token property\">\"properties\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\r\n                    <span class=\"token property\">\"hardwareProfile\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\r\n                      <span class=\"token property\">\"vmSize\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"[parameters('vmSize')]\"</span>\r\n                    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\r\n                    <span class=\"token property\">\"osProfile\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\r\n                      <span class=\"token property\">\"computerName\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"[variables('vmName')]\"</span><span class=\"token punctuation\">,</span>\r\n                      <span class=\"token property\">\"adminUsername\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"[parameters('adminUsername')]\"</span><span class=\"token punctuation\">,</span>\r\n                      <span class=\"token property\">\"adminPassword\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"[parameters('adminPassword')]\"</span>\r\n                    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\r\n                    <span class=\"token property\">\"storageProfile\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\r\n                      <span class=\"token property\">\"imageReference\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\r\n                        <span class=\"token property\">\"publisher\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"MicrosoftWindowsServer\"</span><span class=\"token punctuation\">,</span>\r\n                        <span class=\"token property\">\"offer\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"WindowsServer\"</span><span class=\"token punctuation\">,</span>\r\n                        <span class=\"token property\">\"sku\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"[parameters('windowsOSVersion')]\"</span><span class=\"token punctuation\">,</span>\r\n                        <span class=\"token property\">\"version\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"latest\"</span>\r\n                      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\r\n                      <span class=\"token property\">\"osDisk\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\r\n                        <span class=\"token property\">\"createOption\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"FromImage\"</span>\r\n                      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\r\n                      <span class=\"token property\">\"dataDisks\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\r\n                        <span class=\"token punctuation\">{</span>\r\n                          <span class=\"token property\">\"diskSizeGB\"</span><span class=\"token operator\">:</span> <span class=\"token number\">1023</span><span class=\"token punctuation\">,</span>\r\n                          <span class=\"token property\">\"lun\"</span><span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\r\n                          <span class=\"token property\">\"createOption\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Empty\"</span>\r\n                        <span class=\"token punctuation\">}</span>\r\n                      <span class=\"token punctuation\">]</span>\r\n                    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\r\n                    <span class=\"token property\">\"networkProfile\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\r\n                      <span class=\"token property\">\"networkInterfaces\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\r\n                        <span class=\"token punctuation\">{</span>\r\n                          <span class=\"token property\">\"id\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"[resourceId('Microsoft.Network/networkInterfaces',variables('nicName'))]\"</span>\r\n                        <span class=\"token punctuation\">}</span>\r\n                      <span class=\"token punctuation\">]</span>\r\n                    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\r\n                    <span class=\"token property\">\"diagnosticsProfile\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\r\n                      <span class=\"token property\">\"bootDiagnostics\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\r\n                        <span class=\"token property\">\"enabled\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\r\n                        <span class=\"token property\">\"storageUri\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"[reference(resourceId('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))).primaryEndpoints.blob]\"</span>\r\n                      <span class=\"token punctuation\">}</span>\r\n                    <span class=\"token punctuation\">}</span>\r\n                  <span class=\"token punctuation\">}</span>\r\n                <span class=\"token punctuation\">}</span>\r\n              <span class=\"token punctuation\">]</span></code></pre></div>\n<p>Looking at both the Terraform and Azure ARM way of defining a VM, I know which one I prefer myself. <em>Cough</em> Terraform <em>Cough</em></p>\n<h2>Cross-platform</h2>\n<p>As Terraform is not platform specific unlike Azure ARM, it is versatile allowing you to write your infrastructure as code (IaC) for different cloud providers such as Google Cloud Platform (GCP), Amazon Web Services (AWS) or VMware just to name a few. This is useful for businesses that utilise more than one Cloud platform to provide their services, which according to a report is the case <a href=\"https://www.uktech.news/news/uk-businesses-turn-multiple-cloud-providers-20190103\">\"UK businesses turn to multiple cloud providers\"</a> Don't really think I need to write something for Azure ARM for this.</p>\n<h2>Community and support</h2>\n<p>I found that Terraform responds to issues that are reported quite quickly and the support by the community is also a speedy response. <a href=\"https://github.com/terraform-providers\">Click here for issue forum</a>. I personally haven't used the support for Azure ARM, but this is due to the nice error responses that get thrown up when you do try deploy it. Not to say that Terraform doesn't do the same.</p>\n<h2>Easy of deployment/Workflow</h2>\n<p>Talking in terms of using Azure DevOps to deploy. Both I found are quite simple to deploy, although I found that Azure ARM templates are easier to deploy, due to it being deployed on its native platform. Terraform I had to find out how to write the .yaml instruction document to deploy. Azure ARM templates however, do require you to create the resources groups that you are deploying too and for each resource group you'll need a ARM template for. Unlike in Terraform where it would deploy the resource groups itself as defined in the .tf files, you could technically deploy all the resource groups you need and define it in a single .tf file. For tools I always use Visual Studio code, both Terraform and Azure ARM both have extensions installed on it allowing for syntax highlighting and suggestions. Both do a great job.</p>\n<ul>\n<li><a href=\"https://github.com/Azure/vscode-azureterraform\">Terraform Visual Studio Code extension</a></li>\n<li><a href=\"https://github.com/Microsoft/vscode-azurearmtools\">Azure ARM Visual Studio Code extension</a></li>\n</ul>\n<h2>Validation</h2>\n<p>Where both do validate the code for you before you apply the code itself. Although Azure ARM does not validate the deployment and you will have to deploy it to see whether everything is working as planned. Terraform on the other hand, does validate it through it's plan phase, where it checks the status of whats currently deployed in the Terraform state file (Stored as a blob on Azure if deploying to Azure)</p>\n<h2>Maintainability</h2>\n<p>Having used Terraform more and having to maintain its files more I can say that Terraform will seem to me to be easier. As I haven't had to do \"big\" maintenance on Azure ARM yet. But looking at it compared to Terraform I am not looking forward to it at all! This is due to the fact that Terraform is more readable than ARM and has better syntax for defining and calling variables/attributes.</p>\n<h2>Resource Support</h2>\n<p>What I mean by this is whether the tools support the resources that you need to deploy, such as VMs, databases etc. As Terraform is quite a new tool compared to Azure ARM and given that Azure ARM is written by the Cloud provider I use it is bound to be quite up to date with the that can be deployed via IaC. I found that Terraform lacks quite a few new resources, which is not a surprise seeing as it's just nearly on version 2.0. I also found from personal experience that even if it has the resources on there, some attributes that you want to define for that resource is not allowed or given. They have given an alternative such as deploying ARM templates via Terraform (<a href=\"https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/template_deployment.html\">Can be seen here</a>, but it seems very long winded to do it like this when you can just do it via Azure ARM templates.</p>\n<h2>Conclusion</h2>\n<p>Overall, though I do love Terraform due to it's readability, ease of use and many of the other biased points that I've stated above. I think going on from here until Terraform is updated I will be using Azure ARM templates, due to the up to date resources and the ease of setting up deployment. I can also see it being used more for CI/CD pipelines going forward and I do love a challenge.... Disclaimer: This was written at 4am so please excuse any errors that are in this! Yours faithfully, An Aspiring DevOps Guy</p>","categories":["Infrastructure as Code","Terraform"],"date":"June 12, 2020","description":"Terraform Vs ARM","id":"22211907-07a3-5bf0-9893-cfdbc83714c5","keywords":["Infrastructure as Code","Azure","ARM","Terraform","Blog"],"slug":"/TerraformVsARM/","title":"Terraform Vs ARM","readingTime":{"text":"7 min read"}}]}},"staticQueryHashes":["172304273","1764120992","2442753764","2572006233","3525841079","513457919","540466502","597217301","948380417"],"slicesMap":{}}