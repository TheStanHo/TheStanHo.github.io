{"componentChunkName":"component---node-modules-gatsby-theme-portfolio-minimal-src-templates-article-index-tsx","path":"/TerraformVsARM/","result":{"pageContext":{"article":{"banner":{"alt":"IaC","caption":"Photo by <u><a href=\"https://unsplash.com/photos/j7q-Z9DV3zw\">Nathan Waters</a></u>","src":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#787878","images":{"fallback":{"src":"/static/8dc0d4e035c654e87d0fcf2e7f0047a0/91671/nathan-waters-j7q-Z9DV3zw-unsplash.jpg","srcSet":"/static/8dc0d4e035c654e87d0fcf2e7f0047a0/7e3b4/nathan-waters-j7q-Z9DV3zw-unsplash.jpg 165w,\n/static/8dc0d4e035c654e87d0fcf2e7f0047a0/47f88/nathan-waters-j7q-Z9DV3zw-unsplash.jpg 330w,\n/static/8dc0d4e035c654e87d0fcf2e7f0047a0/91671/nathan-waters-j7q-Z9DV3zw-unsplash.jpg 660w,\n/static/8dc0d4e035c654e87d0fcf2e7f0047a0/5aaff/nathan-waters-j7q-Z9DV3zw-unsplash.jpg 1320w","sizes":"(min-width: 660px) 660px, 100vw"},"sources":[{"srcSet":"/static/8dc0d4e035c654e87d0fcf2e7f0047a0/322ad/nathan-waters-j7q-Z9DV3zw-unsplash.webp 165w,\n/static/8dc0d4e035c654e87d0fcf2e7f0047a0/de3b3/nathan-waters-j7q-Z9DV3zw-unsplash.webp 330w,\n/static/8dc0d4e035c654e87d0fcf2e7f0047a0/2b2b5/nathan-waters-j7q-Z9DV3zw-unsplash.webp 660w,\n/static/8dc0d4e035c654e87d0fcf2e7f0047a0/e36a7/nathan-waters-j7q-Z9DV3zw-unsplash.webp 1320w","type":"image/webp","sizes":"(min-width: 660px) 660px, 100vw"}]},"width":660,"height":400}}}},"body":"<p>The following is a quick blog of my opinion on Terraform and Azure ARM. I am by far an expert on these tools, having only used Terraform on and off for 2 months and Azure ARM for less than a month. Both have its benefits which I will go on to explain and will reveal my preferred choice and why at the end. I have to also mention that I use Azure as my cloud provider so this will be written from that perspective. So lets begin and compare some points I feel are important for a good tool to use for Infrastructure as code (IaC)</p>\n<h2>Understanding</h2>\n<p>The way that Terraform is written allows for a wider audience to use of all skill levels. The simplicity of the documentation and examples given from it, allow for the user to easily apply Terraform to their own needs. For example the below code allows me to create a Windows Virtual Machine (VM), allocate it's network card, login information, the spec of the virtual machine, data disks and operating disks. It can also do more such as running certain scripts after the VM has been built</p>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\">            resource <span class=\"token string\">\"azurerm_virtual_machine\"</span> <span class=\"token string\">\"main\"</span> <span class=\"token punctuation\">{</span>\r\n              name                  = <span class=\"token string\">\"${var.prefix}-vm\"</span>\r\n              location              = <span class=\"token string\">\"${azurerm_resource_group.main.location}\"</span>\r\n              resource_group_name   = <span class=\"token string\">\"${azurerm_resource_group.main.name}\"</span>\r\n              network_interface_ids = <span class=\"token punctuation\">[</span><span class=\"token string\">\"${azurerm_network_interface.main.id}\"</span><span class=\"token punctuation\">]</span>\r\n              vm_size               = <span class=\"token string\">\"Standard_DS1_v2\"</span>\r\n            \r\n              storage_image_reference <span class=\"token punctuation\">{</span>\r\n                publisher = <span class=\"token string\">\"MicrosoftWindowsServer\"</span>\r\n                offer     = <span class=\"token string\">\"WindowsServer\"</span>\r\n                sku       = <span class=\"token string\">\"2016-Datacenter\"</span>\r\n                version   = <span class=\"token string\">\"latest\"</span>\r\n              <span class=\"token punctuation\">}</span>\r\n              storage_os_disk <span class=\"token punctuation\">{</span>\r\n                name              = <span class=\"token string\">\"myosdisk1\"</span>\r\n                caching           = <span class=\"token string\">\"ReadWrite\"</span>\r\n                create_option     = <span class=\"token string\">\"FromImage\"</span>\r\n                managed_disk_type = <span class=\"token string\">\"Standard_LRS\"</span>\r\n              <span class=\"token punctuation\">}</span>\r\n              os_profile <span class=\"token punctuation\">{</span>\r\n                computer_name  = <span class=\"token string\">\"hostname\"</span>\r\n                admin_username = <span class=\"token string\">\"testadmin\"</span>\r\n                admin_password = <span class=\"token string\">\"Password1234!\"</span>\r\n              <span class=\"token punctuation\">}</span>\r\n              os_profile_linux_config <span class=\"token punctuation\">{</span>\r\n                disable_password_authentication = <span class=\"token boolean\">false</span>\r\n              <span class=\"token punctuation\">}</span>\r\n              tags = <span class=\"token punctuation\">{</span>\r\n                environment = <span class=\"token string\">\"staging\"</span>\r\n              <span class=\"token punctuation\">}</span>\r\n            <span class=\"token punctuation\">}</span>\r\n          </code></pre></div>","categories":["Infrastructure as Code","Terraform"],"date":"March 12, 2023","description":"Terraform Vs ARM","id":"22211907-07a3-5bf0-9893-cfdbc83714c5","keywords":["Infrastructure as Code","Azure","ARM","Terraform","Blog"],"slug":"/TerraformVsARM/","title":"Terraform Vs ARM","readingTime":{"text":"2 min read"}},"listingPagePath":"/blog"}},"staticQueryHashes":["172304273","1764120992","2442753764","2572006233","3525841079","513457919","540466502","597217301","948380417"],"slicesMap":{}}