{"componentChunkName":"component---node-modules-gatsby-theme-portfolio-minimal-src-templates-article-index-tsx","path":"/PythonScriptingFabricLibrary/","result":{"pageContext":{"article":{"banner":{"alt":"Python Background","caption":"Photo by <u><a href=\"https://unsplash.com/photos/ieic5Tq8YMk\">Chris Ried</a></u>","src":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#181818","images":{"fallback":{"src":"/static/7e50a32e75c8161805264077d188cdd2/91671/chris-ried-ieic5Tq8YMk-unsplash.jpg","srcSet":"/static/7e50a32e75c8161805264077d188cdd2/7e3b4/chris-ried-ieic5Tq8YMk-unsplash.jpg 165w,\n/static/7e50a32e75c8161805264077d188cdd2/47f88/chris-ried-ieic5Tq8YMk-unsplash.jpg 330w,\n/static/7e50a32e75c8161805264077d188cdd2/91671/chris-ried-ieic5Tq8YMk-unsplash.jpg 660w,\n/static/7e50a32e75c8161805264077d188cdd2/5aaff/chris-ried-ieic5Tq8YMk-unsplash.jpg 1320w","sizes":"(min-width: 660px) 660px, 100vw"},"sources":[{"srcSet":"/static/7e50a32e75c8161805264077d188cdd2/322ad/chris-ried-ieic5Tq8YMk-unsplash.webp 165w,\n/static/7e50a32e75c8161805264077d188cdd2/de3b3/chris-ried-ieic5Tq8YMk-unsplash.webp 330w,\n/static/7e50a32e75c8161805264077d188cdd2/2b2b5/chris-ried-ieic5Tq8YMk-unsplash.webp 660w,\n/static/7e50a32e75c8161805264077d188cdd2/e36a7/chris-ried-ieic5Tq8YMk-unsplash.webp 1320w","type":"image/webp","sizes":"(min-width: 660px) 660px, 100vw"}]},"width":660,"height":400}}}},"body":"<p>Having scripted mostly in Powershell &#x26; Bash the majority of my DevOps career (all of 3 years). I thought I would dabble in some Python scripting one evening. I have some Python experience having learned some basics during my Masters degree, I thought I might as well use this opportunity to refresh myself in the language loved by many Software Developers and DevOps Engineers alike.</p>\n<h2>Choosing the Module</h2>\n<p>The module I chose to experiment with this evening was one that I read about online called \"<a href=\"https://www.fabfile.org/\">Fabric</a>\". It is described as a \"... high level Pyton library designed to execute shell commands remotely over SSH, yielding Python objects in return\". I chose this module to play around with this evening as I myself find it a hassle sometimes to run commands on linux VMs. Utlising this module we can do the following by just running the script locally:</p>\n<ul>\n<li>Run commands on individual or multiple hosts at a time</li>\n<li>Automate commands that are used frequently either to solve issues or we can write Python script functions to</li>\n</ul>\n<h2>Setting up the local environment</h2>\n<p>To play with the Fabric module I created a local Docker image to run locally on my PC.\r\nDockerFile based on the one <a href=\"https://dev.to/s1ntaxe770r/how-to-setup-ssh-within-a-docker-container-i5i\">here</a></p>\n<p>(Yes I know the password is super secure!ðŸ‘€)</p>\n<div class=\"gatsby-highlight\" data-language=\"dockerfile\"><pre class=\"language-dockerfile\"><code class=\"language-dockerfile\"><span class=\"token instruction\"><span class=\"token keyword\">FROM</span> ubuntu:latest</span>\r\n\r\n<span class=\"token instruction\"><span class=\"token keyword\">RUN</span> apt update &amp;&amp; apt install  openssh-server sudo -y</span>\r\n<span class=\"token instruction\"><span class=\"token keyword\">RUN</span> useradd -rm -d /home/ubuntu -s /bin/bash -g root -G sudo -u 1000 pythonScriptUser</span>\r\n<span class=\"token instruction\"><span class=\"token keyword\">RUN</span>  echo <span class=\"token string\">'pythonScriptUser:test123'</span> | chpasswd</span>\r\n<span class=\"token instruction\"><span class=\"token keyword\">RUN</span> service ssh start</span>\r\n\r\n<span class=\"token instruction\"><span class=\"token keyword\">EXPOSE</span> 22</span>\r\n\r\n<span class=\"token instruction\"><span class=\"token keyword\">CMD</span> [<span class=\"token string\">\"/usr/sbin/sshd\"</span>,<span class=\"token string\">\"-D\"</span>]</span></code></pre></div>\n<p>As well as this of course I had to have Python as well as pip install the fabric module</p>\n<h2>Creating the script</h2>\n<p>I decided to just create functions for different operations for easier reusability. Though obviously the script can be improved if it were to actually be used in a working environment (remember this was just for me to mess around with!).</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> fabric <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span>\r\n\r\n<span class=\"token comment\">#Initiate the connection to the host</span>\r\n<span class=\"token keyword\">def</span> <span class=\"token function\">ssh_connection</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\r\n    config <span class=\"token operator\">=</span> Config<span class=\"token punctuation\">(</span>overrides<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token string\">'user'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'pythonScriptUser'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'connect_kwargs'</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span><span class=\"token string\">'password'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'test123'</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'sudo'</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span><span class=\"token string\">'password'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'test123'</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\r\n    conn <span class=\"token operator\">=</span> Connection<span class=\"token punctuation\">(</span><span class=\"token string\">\"127.0.0.1\"</span><span class=\"token punctuation\">,</span> user<span class=\"token operator\">=</span><span class=\"token string\">\"pythonScriptUser\"</span><span class=\"token punctuation\">,</span> config<span class=\"token operator\">=</span>config<span class=\"token punctuation\">,</span> port<span class=\"token operator\">=</span><span class=\"token number\">22</span><span class=\"token punctuation\">)</span>\r\n    <span class=\"token keyword\">return</span> conn\r\n\r\n<span class=\"token comment\">#run the uptime command</span>\r\n<span class=\"token keyword\">def</span> <span class=\"token function\">uptime</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\r\n    ssh_connection<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>run<span class=\"token punctuation\">(</span><span class=\"token string\">'uptime'</span><span class=\"token punctuation\">)</span>\r\n\r\n<span class=\"token comment\">#Install the array of packages given to the function</span>\r\n<span class=\"token keyword\">def</span> <span class=\"token function\">installPackages</span><span class=\"token punctuation\">(</span>packages<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>    \r\n    <span class=\"token keyword\">for</span> package <span class=\"token keyword\">in</span> packages<span class=\"token punctuation\">:</span>\r\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"installing \"</span><span class=\"token operator\">+</span>package<span class=\"token punctuation\">)</span>\r\n        ssh_connection<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>sudo<span class=\"token punctuation\">(</span><span class=\"token string\">\"apt install \"</span><span class=\"token operator\">+</span> package <span class=\"token operator\">+</span><span class=\"token string\">\" -y\"</span><span class=\"token punctuation\">)</span>\r\n\r\n<span class=\"token comment\">#run the nslookup command</span>\r\n<span class=\"token keyword\">def</span> <span class=\"token function\">nslookup</span><span class=\"token punctuation\">(</span>hostname<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\r\n    ssh_connection<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>run<span class=\"token punctuation\">(</span><span class=\"token string\">\"nslookup \"</span><span class=\"token operator\">+</span>hostname<span class=\"token punctuation\">)</span>\r\n\r\n<span class=\"token comment\">#upload a file to the host given the source of the file and the destination</span>\r\n<span class=\"token keyword\">def</span> <span class=\"token function\">uploadFile</span><span class=\"token punctuation\">(</span>source<span class=\"token punctuation\">,</span>destination<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\r\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"uploading \"</span><span class=\"token operator\">+</span> source <span class=\"token operator\">+</span><span class=\"token string\">\" to \"</span><span class=\"token operator\">+</span> destination<span class=\"token punctuation\">)</span>\r\n    ssh_connection<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>put<span class=\"token punctuation\">(</span>source<span class=\"token punctuation\">,</span> destination<span class=\"token punctuation\">)</span>\r\n\r\n<span class=\"token comment\">#download file from the source to the destination</span>\r\n<span class=\"token keyword\">def</span> <span class=\"token function\">downloadFile</span><span class=\"token punctuation\">(</span>source<span class=\"token punctuation\">,</span>destination<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\r\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"downloading \"</span><span class=\"token operator\">+</span> source <span class=\"token operator\">+</span><span class=\"token string\">\" from \"</span><span class=\"token operator\">+</span> destination<span class=\"token punctuation\">)</span>\r\n    ssh_connection<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span>source<span class=\"token punctuation\">,</span>destination<span class=\"token punctuation\">)</span>\r\n\r\n<span class=\"token comment\"># below we are just running the functions that were created above</span>\r\npackages <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"vim\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"neofetch\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"net-tools\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"dnsutils\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"curl\"</span><span class=\"token punctuation\">]</span>\r\ninstallPackages<span class=\"token punctuation\">(</span>packages<span class=\"token punctuation\">)</span>\r\n\r\nnslookup<span class=\"token punctuation\">(</span><span class=\"token string\">\"www.google.com\"</span><span class=\"token punctuation\">)</span>\r\n\r\nuploadFile<span class=\"token punctuation\">(</span><span class=\"token string\">\"C:\\\\temp\\\\transfer-test.txt\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"/home/ubuntu\"</span><span class=\"token punctuation\">)</span>\r\n\r\ndownloadFile<span class=\"token punctuation\">(</span><span class=\"token string\">\"/etc/adduser.conf\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"C:\\\\temp\\\\test.txt\"</span><span class=\"token punctuation\">)</span>\r\n\r\n<span class=\"token comment\">#cd with context manager. As just doing ssh_connection().run(\"cd /var\") wouldn't work</span>\r\n<span class=\"token keyword\">with</span> ssh_connection<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>cd<span class=\"token punctuation\">(</span><span class=\"token string\">\"/var\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\r\n    ssh_connection<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>run<span class=\"token punctuation\">(</span><span class=\"token string\">\"pwd\"</span><span class=\"token punctuation\">)</span>\r\n</code></pre></div>\n<h2>Overall</h2>\n<p>I believe from this small demonstration and having played around with it (for all of 1 hour) that in future if possible, I will try utilise Python when given the opportunity. Python can be used in DevOps lifecycle for such things as automation, configuration management and provisoning. The fact also that it can be ran on the linux and windows OS is also an additional benefit. I personally have had issues when trying to create cronjobs using powershell running on a linux OS due to the size of the image and workarounds I had to implement. But using Python we can potentially overcome these issues.</p>\n<p>From my point of view the benefits of this are:</p>\n<ul>\n<li>Easily readable code - Python is known to be \"user-friendly\" as the the syntax is very readable and as a result the code itself is \"documentation\". If the actual documentation is missing (Though it shouldn't be the case, right?ðŸ˜‰). It also allows for better efficency and production due to this simple syntax, which most people can pick up quickly or at least have an understanding of what the script is doing</li>\n<li>Vast amount of available modules/libraries - If there is something you want to script with Python it most likely already been done or the foundations are already out there</li>\n<li>Huge community - Means modules and scripts are probably already existing out there</li>\n</ul>","categories":["Scripting","Monitoring","Python"],"date":"August 26, 2023","description":"Python Scripting with Fabric library","id":"f5c13ce9-4e0d-56cc-92d4-f66293896cfa","keywords":["Scripting","Monitoring","Python","Blog","Fabric"],"slug":"/PythonScriptingFabricLibrary/","title":"Python Scripting with Fabric library","readingTime":{"text":"4 min read"}},"listingPagePath":"/blogs"}},"staticQueryHashes":["172304273","1764120992","2442753764","2572006233","3525841079","513457919","540466502","597217301","948380417"],"slicesMap":{}}